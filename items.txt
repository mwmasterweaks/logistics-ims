<template>
  <div class="container-fluid">
    <div class="block-header" style="margin-top:-20px">
      <div class="row clearfix">
        <div class="col-md-12">
          <!-- NEW ITEM BUTTON -->
          <button
            type="button"
            class="btn btn-default waves-effect"
            @click="createNewItem"
            :disabled="!roles.create_item"
          >
            <i class="material-icons">note_add</i>
            <span>New Product</span>
          </button>
          <!-- New Item Group Button -->
          <!-- <button
            type="button"
            class="btn btn-default waves-effect"
            @click="createNewGroup"
            :disabled="!roles.create_item"
          >
            <i class="material-icons">note_add</i>
            <span>Product Groups</span>
          </button> -->

          <div style="float:right;display:block">
            <button
              type="submit"
              class="btn btn-lg btn-default waves-effect"
              @click.prevent="print"
              title="Print Preview"
            >
              <i class="material-icons">print</i>
            </button>
            <json-excel
              :data="dataForExcel"
              class="btn btn-lg btn-default waves-effect"
              title="Export to Excel"
            >
              <i class="material-icons">publish</i>
            </json-excel>
          </div>
          <!--END NEW ITEM BUTTON -->
        </div>
      </div>
    </div>

    <div class="card">
      <div class="header">
        <h2>Manage Products</h2>
      </div>
      <div class="body">
        <form @submit.prevent="searchItem">
          <br />
          <div class="row clearfix">
            <div class="col-md-5">
              <div class="form-group">
                <div class="form-line">
                  <span>Search</span>
                  <input
                    id="search"
                    type="text"
                    class="form-control"
                    autocomplete="off"
                    v-model="search.item"
                  />
                </div>
              </div>
            </div>
            <div class="col-md-2">
              <div class="form-group">
                <span>Category</span>
                <div class="form-line">
                  <select class="form-control" v-model="search.category">
                    <option
                      v-for="category in category"
                      :key="category.id"
                      v-bind:value="category.id"
                    >
                      {{ category.name }}
                    </option>
                    <option value selected>All</option>
                  </select>
                </div>
              </div>
            </div>
            <div class="col-md-2">
              <div class="form-group">
                <span>Type</span>
                <div class="form-line">
                  <select class="form-control" v-model="search.type">
                    <option
                      v-for="type in types"
                      :key="type.id"
                      v-bind:value="type.id"
                    >
                      {{ type.name }}
                    </option>
                    <option value selected>All</option>
                  </select>
                </div>
              </div>
            </div>
            <div class="col-md-3">
              <br />
              <button
                type="submit"
                class="btn bg-black waves-effect waves-light"
              >
                Filter
              </button>

              <button class="btn btn-success waves-effect" @click="clearSearch">
                Clear Filter
              </button>
            </div>
          </div>
        </form>
        <div class="row clearfix">
          <div class="col-md-12">
            <div class="table-responsive" id="printable">
              <div class="table-wrap">
                <table
                  class="table table-striped table-condensed table-hover"
                  id="itemTable"
                  ref="itemTable"
                >
                  <thead>
                    <tr>
                      <th
                        class="font-bold"
                        v-for="column in columns"
                        :key="column"
                      >
                        {{ column }}
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    <router-link
                      tag="tr"
                      v-for="item in items"
                      :key="item.id"
                      :to="'/items/' + item.id + '/edit'"
                      style="cursor: pointer"
                    >
                      <td>
                        <img
                          v-if="item.image != null"
                          class="img-responsive"
                          :src="$img_path + item.image"
                          width="50"
                          height="50"
                        />
                        <img
                          v-else
                          class="img-responsive"
                          :src="$img_path + '/default.png'"
                          width="50"
                          height="50"
                        />
                      </td>
                      <td>{{ item.id }}</td>
                      <td>{{ item.name }}</td>
                      <td>{{ item.description }}</td>
                      <td>{{ item.category.name }}</td>
                      <td>{{ item.type.name }}</td>
                      <td
                        class="bg-red"
                        v-show="
                          item.forecast.totalItem < 1 &&
                            item.forecast.status == 'no'
                        "
                      >
                        <span>No Stock</span>
                      </td>
                      <td
                        class="bg-orange"
                        v-show="
                          item.forecast.totalItem > 0 &&
                            item.forecast.status == 'no'
                        "
                      >
                        <span>Low Stock</span>
                      </td>
                      <td
                        class="bg-green"
                        v-show="
                          item.forecast.totalItem > 0 &&
                            item.forecast.status == 'ok'
                        "
                      >
                        <span>High Stock</span>
                      </td>
                      <td id="td_qty">
                        <span v-if="item.stocks.length < 1">0</span>
                        <span v-else>{{ item.total_qty }}</span>
                      </td>
                    </router-link>
                    <tr v-show="items.length == 0">
                      <td colspan="14" class="text-center">
                        <small class="col-red">
                          <i>No results found.</i>
                        </small>
                      </td>
                    </tr>
                  </tbody>
                </table>
              </div>
            </div>
            <br />
            <p>{{ items.length }} items found.</p>
          </div>
        </div>
      </div>
    </div>

    <!-- START PRINT MODAL -->
    <div
      class="modal fade"
      id="printModal"
      tabindex="-1"
      role="dialog"
      data-backdrop="static"
      data-keyboard="false"
    >
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <div class="row clearfix">
              <div class="col-md-6">
                <h4>Print select</h4>
              </div>
              <button
                type="button"
                class="close"
                data-dismiss="modal"
                aria-label="Close"
              >
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
          </div>
          <div class="modal-body">
            <div class="row clearfix">
              <div class="col-sm-3">
                <input
                  type="checkbox"
                  id="print_product_code"
                  class="filled-in chk-col-black"
                  v-model="printData.id"
                />
                <label for="print_product_code">Product Code</label>
              </div>
              <div class="col-sm-3">
                <input
                  type="checkbox"
                  id="print_name"
                  class="filled-in chk-col-black"
                  v-model="printData.name"
                />
                <label for="print_name">Name</label>
              </div>
              <div class="col-sm-3">
                <input
                  type="checkbox"
                  id="print_desc"
                  class="filled-in chk-col-black"
                  v-model="printData.desc"
                />
                <label for="print_desc">Description</label>
              </div>
              <div class="col-sm-3">
                <input
                  type="checkbox"
                  id="print_cat"
                  class="filled-in chk-col-black"
                  v-model="printData.category"
                />
                <label for="print_cat">Category</label>
              </div>
            </div>
            <br />
            <div class="row clearfix">
              <div class="col-sm-3">
                <input
                  type="checkbox"
                  id="print_type"
                  class="filled-in chk-col-black"
                  v-model="printData.type"
                />
                <label for="print_type">Type</label>
              </div>
              <div class="col-sm-3">
                <input
                  type="checkbox"
                  id="print_status"
                  class="filled-in chk-col-black"
                  v-model="printData.status"
                />
                <label for="print_status">Status</label>
              </div>
              <div class="col-sm-3">
                <input
                  type="checkbox"
                  id="print_total"
                  class="filled-in chk-col-black"
                  v-model="printData.total"
                />
                <label for="print_total">Total</label>
              </div>
            </div>

            <div class="row clearfix">
              <div class="col-md-6 col-md-offset-6">
                <br />
                <div class="pull-right">
                  <button
                    @click="printPreview"
                    class="btn btn-lg btn-info waves-effect waves-light"
                  >
                    Print Preview
                  </button>
                </div>
              </div>
            </div>
          </div>
          <div class="footer"></div>
        </div>
      </div>
    </div>
    <!-- END PRINT MODAL-->
    <div class="modalLoading">
      <!-- Place at bottom of page -->
    </div>
  </div>
</template>

<script>
import swal from "sweetalert";
import JsonExcel from "vue-json-excel";

export default {
  components: {
    "json-excel": JsonExcel
  },

  data() {
    return {
      printData: {
        id: true,
        name: true,
        desc: true,
        category: true,
        type: false,
        status: false,
        total: false
      },
      columns: [
        "Image",
        "Product Code#",
        "Name",
        "Description",
        "Category",
        "Type",
        "Status",
        "Total"
      ],
      items: [],
      category: [],
      warehouses: [],
      types: [],
      edit: [],
      roles: [],
      search: {
        item: "",
        category: "",
        type: "",
        sort: "Latest"
      },
      dataForExcel: []
    };
  },

  created() {
    this.items = this.$global.getItems();
    this.types = this.$global.getTypes();
    this.category = this.$global.getCategories();
    this.warehouses = this.$global.getWarehouses();
    this.roles = this.$global.getRoles();
    console.log(this.$img_path);
    $(".page-loader-wrapper").fadeOut();
  },

  mounted() {
    this.fetchDataaa();
  },

  methods: {
    getItems() {
      this.$http.get("api/items").then(response => {
        this.items = response.body;
      });
    },
    searchItem() {
      var body = $("body");
      body.addClass("loading");
      this.$http.post("api/items/search", this.search).then(response => {
        var body = $("body");
        // console.log(response.body);
        this.items = response.body;
        this.fetchDataaa();
        body.removeClass("loading");
      });
    },
    fetchDataaa() {
      this.dataForExcel = [];
      for (var i = 0; i < this.items.length; i++) {
        var status = "";
        if (
          this.items[i].forecast.totalItem < 1 &&
          this.items[i].forecast.status == "no"
        )
          status = "No Stock";
        if (
          this.items[i].forecast.totalItem > 0 &&
          this.items[i].forecast.status == "no"
        )
          status = "Low Stock";
        if (
          this.items[i].forecast.totalItem > 0 &&
          this.items[i].forecast.status == "ok"
        )
          status = "High Stock";
        this.dataForExcel.push({
          ProductCode: this.items[i].id,
          Name: this.items[i].name,
          Description: this.items[i].description,
          Category: this.items[i].category.name,
          Type: this.items[i].type.name,
          Status: status,
          Quantity: this.items[i].total_qty
        });
      }
    },
    clearSearch() {
      this.search.item = "";
      this.search.category = "";
      this.search.type = "";
      this.searchItem();
    },
    print() {
      this.$htmlToPaper("printable");
    },
    printPreview() {
      // $("#printModal").modal("hide");
      var divToPrint = this.$refs.itemTable;
      var newWin = window.open("");
      newWin.document.write(
        '<html><head><style>#itemTable {font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;border-collapse: collapse;  width: 100%;}#itemTable td, #customers th {  border: 1px solid #ddd;  padding: 8px;}#itemTable tr:nth-child(even){background-color: #f2f2f2;}#itemTable tr:hover {background-color: #ddd;}#itemTable th {  padding-top: 12px;  padding-bottom: 12px;  text-align: left;  background-color: #4CAF50;  color: white;}</style></head><body>'
      );
      newWin.document.write(divToPrint.outerHTML);
      newWin.document.write("</body></html>");

      var tbl = newWin.document.getElementById("itemTable");

      for (var i = 0; i < tbl.rows.length - 1; i++) {
        if (!this.printData.total) {
          if (i == 0) {
            tbl.rows[0].cells[6].style.display = "none";
          } else {
            tbl.rows[i].cells[8].style.display = "none";
          }
        }

        if (!this.printData.status) {
          if (i == 0) {
            tbl.rows[0].cells[5].style.display = "none";
          } else {
            tbl.rows[i].cells[5].style.display = "none";
            tbl.rows[i].cells[6].style.display = "none";
            tbl.rows[i].cells[7].style.display = "none";
          }
        }

        if (!this.printData.type) {
          tbl.rows[i].cells[4].style.display = "none";
        }
        if (!this.printData.category) {
          tbl.rows[i].cells[3].style.display = "none";
        }
        if (!this.printData.desc) {
          tbl.rows[i].cells[2].style.display = "none";
        }
        if (!this.printData.name) {
          tbl.rows[i].cells[1].style.display = "none";
        }
        if (!this.printData.id) {
          tbl.rows[i].cells[0].style.display = "none";
        }
      }
      newWin.print();
      newWin.close();
    },

    createNewItem() {
      swal("Create a new product?", {
        buttons: {
          Yes: true,
          cancel: "Cancel"
        }
      }).then(value => {
        switch (value) {
          case "Yes":
            this.$router.push({
              path: "/create/item"
            });
            break;

          default:
            break;
        }
      });
    },

    createNewGroup() {
      // swal("Create a new product group?", {
      //   buttons: {
      //     Yes: true,
      //     cancel: "Cancel"
      //   }
      // }).then(value => {
      //   switch (value) {
      //     case "Yes":
      //       this.$router.push({
      //         path: "/create/itemGroup"
      //       });
      //       break;

      //     default:
      //       break;
      //   }
      // });
      this.$router.push({
        path: "/create/itemGroup"
      });
    }
  }
};
</script>

<style scoped>
.table-wrap {
  height: 500px;
  overflow-y: auto;
  overflow-x: hidden;
  border: 1px solid #eee;
}

/* width */
::-webkit-scrollbar {
  width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  background: #f1f1f1;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: #888;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555;
}

.modalLoading {
  display: none;
  position: fixed;
  z-index: 1000;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: rgba(255, 255, 255, 0.8) url("../../img/loading.gif") 50% 50%
    no-repeat;
}

body.loading .modalLoading {
  overflow: hidden;
}

body.loading .modalLoading {
  display: block;
}
</style>
